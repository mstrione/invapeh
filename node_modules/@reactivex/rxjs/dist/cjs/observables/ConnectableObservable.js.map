{"version":3,"sources":["../../es6/observables/ConnectableObservable.js"],"names":[],"mappings":"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","file":"ConnectableObservable.js","sourcesContent":["import Observable from '../Observable';\nimport Subscription from '../Subscription';\nexport default class ConnectableObservable extends Observable {\n    constructor(source, subjectFactory) {\n        super();\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n    }\n    _subscribe(subscriber) {\n        return this._getSubject().subscribe(subscriber);\n    }\n    _getSubject() {\n        const subject = this.subject;\n        if (subject && !subject.isUnsubscribed) {\n            return subject;\n        }\n        return (this.subject = this.subjectFactory());\n    }\n    connect() {\n        const source = this.source;\n        let subscription = this.subscription;\n        if (subscription && !subscription.isUnsubscribed) {\n            return subscription;\n        }\n        subscription = source.subscribe(this._getSubject());\n        subscription.add(new ConnectableSubscription(this));\n        return (this.subscription = subscription);\n    }\n    refCount() {\n        return new RefCountObservable(this);\n    }\n}\nclass ConnectableSubscription extends Subscription {\n    constructor(connectable) {\n        super();\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const connectable = this.connectable;\n        connectable.subject = void 0;\n        connectable.subscription = void 0;\n        this.connectable = void 0;\n    }\n}\nclass RefCountObservable extends Observable {\n    constructor(connectable, refCount = 0) {\n        super();\n        this.connectable = connectable;\n        this.refCount = refCount;\n    }\n    _subscribe(subscriber) {\n        const connectable = this.connectable;\n        const subscription = connectable.subscribe(subscriber);\n        if (++this.refCount === 1) {\n            this.connection = connectable.connect();\n        }\n        subscription.add(new RefCountSubscription(this));\n        return subscription;\n    }\n}\nclass RefCountSubscription extends Subscription {\n    constructor(refCountObservable) {\n        super();\n        this.refCountObservable = refCountObservable;\n    }\n    _unsubscribe() {\n        const observable = this.refCountObservable;\n        if (--observable.refCount === 0) {\n            observable.connection.unsubscribe();\n            observable.connection = void 0;\n        }\n    }\n}\n//# sourceMappingURL=ConnectableObservable.js.map"]}