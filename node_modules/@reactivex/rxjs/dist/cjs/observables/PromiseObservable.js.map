{"version":3,"sources":["../../es6/observables/PromiseObservable.js"],"names":[],"mappings":"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","file":"PromiseObservable.js","sourcesContent":["import Observable from '../Observable';\nimport Subscription from '../Subscription';\nimport immediate from '../schedulers/immediate';\nexport default class PromiseObservable extends Observable {\n    constructor(promise, scheduler) {\n        super();\n        this.promise = promise;\n        this.scheduler = scheduler;\n        this._isScalar = false;\n    }\n    static create(promise, scheduler = immediate) {\n        return new PromiseObservable(promise, scheduler);\n    }\n    _subscribe(subscriber) {\n        const scheduler = this.scheduler;\n        const promise = this.promise;\n        if (scheduler === immediate) {\n            if (this._isScalar) {\n                subscriber.next(this.value);\n                subscriber.complete();\n            }\n            else {\n                promise.then(value => {\n                    this._isScalar = true;\n                    this.value = value;\n                    subscriber.next(value);\n                    subscriber.complete();\n                }, err => subscriber.error(err))\n                    .then(null, err => {\n                    // escape the promise trap, throw unhandled errors\n                    setTimeout(() => { throw err; });\n                });\n            }\n        }\n        else {\n            let subscription = new Subscription();\n            if (this._isScalar) {\n                const value = this.value;\n                subscription.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n            else {\n                promise.then(value => {\n                    this._isScalar = true;\n                    this.value = value;\n                    subscription.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n                }, err => subscription.add(scheduler.schedule(dispatchError, 0, { err, subscriber })))\n                    .then(null, err => {\n                    // escape the promise trap, throw unhandled errors\n                    scheduler.schedule(() => { throw err; });\n                });\n            }\n            return subscription;\n        }\n    }\n}\nfunction dispatchNext({ value, subscriber }) {\n    subscriber.next(value);\n    subscriber.complete();\n}\nfunction dispatchError({ err, subscriber }) {\n    subscriber.error(err);\n}\n//# sourceMappingURL=PromiseObservable.js.map"]}