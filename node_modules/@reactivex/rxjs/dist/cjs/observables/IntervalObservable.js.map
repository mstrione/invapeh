{"version":3,"sources":["../../es6/observables/IntervalObservable.js"],"names":[],"mappings":";;;;;;;;;;6BAAsB,mBAAmB;;;;2BAClB,eAAe;;;;kCACjB,wBAAwB;;;;IACxB,kBAAkB;cAAlB,kBAAkB;;AACxB,aADM,kBAAkB,GACW;YAAlC,MAAM,yDAAG,CAAC;YAAE,SAAS;;8BADhB,kBAAkB;;AAE/B,8BAAO,CAAC;AACR,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,2BAAU,MAAM,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;AAClC,gBAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACnB;AACD,YAAI,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,QAAQ,KAAK,UAAU,EAAE;AACxD,gBAAI,CAAC,SAAS,kCAAW,CAAC;SAC7B;KACJ;;;;AAXgB,sBAAkB,CAY5B,MAAM,GAAA,kBAAmC;YAAlC,MAAM,yDAAG,CAAC;YAAE,SAAS;;AAC/B,eAAO,IAAI,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KACpD;;AAdgB,sBAAkB,CAe5B,QAAQ,GAAA,kBAAC,KAAK,EAAE;YACX,KAAK,GAAyB,KAAK,CAAnC,KAAK;YAAE,UAAU,GAAa,KAAK,CAA5B,UAAU;YAAE,MAAM,GAAK,KAAK,CAAhB,MAAM;;AACjC,kBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvB,YAAI,UAAU,CAAC,cAAc,EAAE;AAC3B,mBAAO;SACV;AACD,aAAK,CAAC,KAAK,IAAI,CAAC,CAAC;AACjB,YAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAChC;;AAvBgB,sBAAkB,WAwBnC,UAAU,GAAA,oBAAC,UAAU,EAAE;AACnB,YAAM,KAAK,GAAG,CAAC,CAAC;AAChB,YAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACjC,kBAAU,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,EAAE,MAAM,EAAE;AACnE,iBAAK,EAAL,KAAK,EAAE,UAAU,EAAV,UAAU,EAAE,MAAM,EAAN,MAAM;SAC5B,CAAC,CAAC,CAAC;KACP;;WA/BgB,kBAAkB;;;qBAAlB,kBAAkB","file":"IntervalObservable.js","sourcesContent":["import isNumeric from '../util/isNumeric';\nimport Observable from '../Observable';\nimport nextTick from '../schedulers/nextTick';\nexport default class IntervalObservable extends Observable {\n    constructor(period = 0, scheduler = nextTick) {\n        super();\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = nextTick;\n        }\n    }\n    static create(period = 0, scheduler = nextTick) {\n        return new IntervalObservable(period, scheduler);\n    }\n    static dispatch(state) {\n        const { index, subscriber, period } = state;\n        subscriber.next(index);\n        if (subscriber.isUnsubscribed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    }\n    _subscribe(subscriber) {\n        const index = 0;\n        const period = this.period;\n        const scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index, subscriber, period\n        }));\n    }\n}\n//# sourceMappingURL=IntervalObservable.js.map"]}