{"version":3,"sources":["../../es6/observables/FromEventObservable.js"],"names":[],"mappings":"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","file":"FromEventObservable.js","sourcesContent":["import Observable from '../Observable';\nimport tryCatch from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport Subscription from '../Subscription';\nexport default class FromEventObservable extends Observable {\n    constructor(sourceObj, eventName, selector) {\n        super();\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n    }\n    static create(sourceObj, eventName, selector) {\n        return new FromEventObservable(sourceObj, eventName, selector);\n    }\n    static setupSubscription(sourceObj, eventName, handler, subscriber) {\n        let unsubscribe;\n        let tag = sourceObj.toString();\n        if (tag === '[object NodeList]' || tag === '[object HTMLCollection]') {\n            for (let i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber);\n            }\n        }\n        else if (typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function') {\n            sourceObj.addEventListener(eventName, handler);\n            unsubscribe = () => sourceObj.removeEventListener(eventName, handler);\n        }\n        else if (typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function') {\n            sourceObj.on(eventName, handler);\n            unsubscribe = () => sourceObj.off(eventName, handler);\n        }\n        else if (typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function') {\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = () => sourceObj.removeListener(eventName, handler);\n        }\n        subscriber.add(new Subscription(unsubscribe));\n    }\n    _subscribe(subscriber) {\n        const sourceObj = this.sourceObj;\n        const eventName = this.eventName;\n        const selector = this.selector;\n        let handler = selector ? (e) => {\n            let result = tryCatch(selector)(e);\n            if (result === errorObject) {\n                subscriber.error(result.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : (e) => subscriber.next(e);\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);\n    }\n}\n//# sourceMappingURL=FromEventObservable.js.map"]}