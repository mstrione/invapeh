{"version":3,"sources":["../../es6/observables/ScalarObservable.js"],"names":[],"mappings":"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","file":"ScalarObservable.js","sourcesContent":["import Observable from '../Observable';\nimport tryCatch from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport ErrorObservable from './ErrorObservable';\nimport EmptyObservable from './EmptyObservable';\nexport default class ScalarObservable extends Observable {\n    constructor(value, scheduler) {\n        super();\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n    }\n    static create(value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    }\n    static dispatch(state) {\n        const { done, value, subscriber } = state;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.isUnsubscribed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    }\n    _subscribe(subscriber) {\n        const value = this.value;\n        const scheduler = this.scheduler;\n        if (scheduler) {\n            subscriber.add(scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value, subscriber\n            }));\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.isUnsubscribed) {\n                subscriber.complete();\n            }\n        }\n    }\n}\n// TypeScript is weird about class prototype member functions and instance properties touching on it's plate.\nconst proto = ScalarObservable.prototype;\nproto.map = function (project, thisArg) {\n    let result = tryCatch(project).call(thisArg || this, this.value, 0);\n    if (result === errorObject) {\n        return new ErrorObservable(errorObject.e);\n    }\n    else {\n        return new ScalarObservable(project.call(thisArg || this, this.value, 0));\n    }\n};\nproto.filter = function (select, thisArg) {\n    let result = tryCatch(select).call(thisArg || this, this.value, 0);\n    if (result === errorObject) {\n        return new ErrorObservable(errorObject.e);\n    }\n    else if (result) {\n        return this;\n    }\n    else {\n        return new EmptyObservable();\n    }\n};\nproto.reduce = function (project, acc) {\n    if (typeof acc === 'undefined') {\n        return this;\n    }\n    let result = tryCatch(project)(acc, this.value);\n    if (result === errorObject) {\n        return new ErrorObservable(errorObject.e);\n    }\n    else {\n        return new ScalarObservable(result);\n    }\n};\nproto.scan = function (project, acc) {\n    return this.reduce(project, acc);\n};\nproto.count = function (predicate, thisArg) {\n    if (!predicate) {\n        return new ScalarObservable(1);\n    }\n    else {\n        let result = tryCatch(predicate).call(thisArg || this, this.value, 0, this);\n        if (result === errorObject) {\n            return new ErrorObservable(errorObject.e);\n        }\n        else {\n            return new ScalarObservable(result ? 1 : 0);\n        }\n    }\n};\nproto.skip = function (count) {\n    if (count > 0) {\n        return new EmptyObservable();\n    }\n    return this;\n};\nproto.take = function (count) {\n    if (count > 0) {\n        return this;\n    }\n    return new EmptyObservable();\n};\n//# sourceMappingURL=ScalarObservable.js.map"]}