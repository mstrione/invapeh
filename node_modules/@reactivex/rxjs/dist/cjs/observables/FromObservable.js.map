{"version":3,"sources":["../../es6/observables/FromObservable.js"],"names":[],"mappings":";;;;;;;;;;iCAA8B,qBAAqB;;;;kCACpB,sBAAsB;;;;+BACzB,mBAAmB;;;;qCACtB,2BAA2B;;;;mCAC7B,yBAAyB;;;;2BACzB,eAAe;;;;yCACF,gCAAgC;;mCAC9C,yBAAyB;;;;AAC/C,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;;IACT,cAAc;cAAd,cAAc;;AACpB,aADM,cAAc,CACnB,GAAG,EAAE,SAAS,EAAE;8BADX,cAAc;;AAE3B,+BAAM,IAAI,CAAC,CAAC;AACZ,YAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;;;AALgB,kBAAc,CAMxB,MAAM,GAAA,gBAAC,GAAG,EAAyB;YAAvB,SAAS;;AACxB,YAAI,GAAG,EAAE;AACL,gBAAI,OAAO,CAAC,GAAG,CAAC,EAAE;AACd,uBAAO,iCAAoB,GAAG,EAAE,SAAS,CAAC,CAAC;aAC9C,MACI,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE;AACrC,uBAAO,mCAAsB,GAAG,EAAE,SAAS,CAAC,CAAC;aAChD,MACI,IAAI,OAAO,GAAG,oCAAc,KAAK,UAAU,EAAE;AAC9C,oBAAI,GAAG,mCAAsB,EAAE;AAC3B,2BAAO,GAAG,CAAC;iBACd;AACD,uBAAO,IAAI,cAAc,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;aAC7C,MACI,IAAI,OAAO,GAAG,kCAAY,KAAK,UAAU,EAAE;AAC5C,uBAAO,oCAAuB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;aAC7D;SACJ;AACD,cAAM,IAAI,SAAS,CAAC,AAAC,OAAO,GAAG,GAAI,oBAAoB,CAAC,CAAC;KAC5D;;AAzBgB,kBAAc,WA0B/B,UAAU,GAAA,oBAAC,UAAU,EAAE;AACnB,YAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACrB,YAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACjC,YAAI,SAAS,qCAAc,EAAE;AACzB,mBAAO,GAAG,oCAAc,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SACpD,MACI;AACD,mBAAO,GAAG,oCAAc,EAAE,CAAC,SAAS,CAAC,mDAAwB,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3F;KACJ;;WAnCgB,cAAc;;;qBAAd,cAAc","file":"FromObservable.js","sourcesContent":["import PromiseObservable from './PromiseObservable';\nimport IteratorObservable from './IteratorObservable';\nimport ArrayObservable from './ArrayObservable';\nimport $$observable from '../util/Symbol_observable';\nimport $$iterator from '../util/Symbol_iterator';\nimport Observable from '../Observable';\nimport { ObserveOnSubscriber } from '../operators/observeOn-support';\nimport immediate from '../schedulers/immediate';\nconst isArray = Array.isArray;\nexport default class FromObservable extends Observable {\n    constructor(ish, scheduler) {\n        super(null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    static create(ish, scheduler = immediate) {\n        if (ish) {\n            if (isArray(ish)) {\n                return new ArrayObservable(ish, scheduler);\n            }\n            else if (typeof ish.then === 'function') {\n                return new PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[$$observable] === 'function') {\n                if (ish instanceof Observable) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (typeof ish[$$iterator] === 'function') {\n                return new IteratorObservable(ish, null, null, scheduler);\n            }\n        }\n        throw new TypeError((typeof ish) + ' is not observable');\n    }\n    _subscribe(subscriber) {\n        const ish = this.ish;\n        const scheduler = this.scheduler;\n        if (scheduler === immediate) {\n            return ish[$$observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[$$observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    }\n}\n//# sourceMappingURL=FromObservable.js.map"]}