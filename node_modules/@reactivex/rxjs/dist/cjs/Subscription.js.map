{"version":3,"sources":["../es6/Subscription.js"],"names":[],"mappings":";;;;;;IAAqB,YAAY;AAClB,aADM,YAAY,CACjB,YAAY,EAAE;8BADT,YAAY;;AAEzB,YAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAC5B,YAAI,YAAY,EAAE;AACd,gBAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACpC;KACJ;;AANgB,gBAAY,WAO7B,YAAY,GAAA,wBAAG,EACd;;AARgB,gBAAY,WAS7B,WAAW,GAAA,uBAAG;AACV,YAAI,IAAI,CAAC,cAAc,EAAE;AACrB,mBAAO;SACV;AACD,YAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,YAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;AACtC,YAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;AAC1C,YAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;AAC7B,YAAI,WAAW,EAAE;AACb,uBAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;AACD,YAAI,aAAa,IAAI,IAAI,EAAE;AACvB,gBAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACf,gBAAM,GAAG,GAAG,aAAa,CAAC,MAAM,CAAC;AACjC,mBAAO,EAAE,KAAK,GAAG,GAAG,EAAE;AAClB,6BAAa,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;aACtC;SACJ;KACJ;;AA3BgB,gBAAY,WA4B7B,GAAG,GAAA,aAAC,YAAY,EAAE;;;;;AAKd,YAAI,CAAC,YAAY,IAAK,YAAY,KAAK,IAAI,AAAC,IAAK,YAAY,KAAK,YAAY,CAAC,KAAK,AAAC,EAAE;AACnF,mBAAO;SACV;AACD,YAAI,GAAG,GAAG,YAAY,CAAC;AACvB,gBAAQ,OAAO,YAAY;AACvB,iBAAK,UAAU;AACX,mBAAG,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;AAAA,AACzC,iBAAK,QAAQ;AACT,oBAAI,GAAG,CAAC,cAAc,IAAI,OAAO,GAAG,CAAC,WAAW,KAAK,UAAU,EAAE;AAC7D,0BAAM;iBACT,MACI,IAAI,IAAI,CAAC,cAAc,EAAE;AAC1B,uBAAG,CAAC,WAAW,EAAE,CAAC;iBACrB,MACI;AACD,wBAAM,aAAa,GAAG,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc,GAAG,EAAE,CAAA,AAAC,CAAC;AACxE,iCAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;AACD,sBAAM;AAAA,AACV;AACI,sBAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,YAAY,GAAG,yBAAyB,CAAC,CAAC;AAAA,SAChG;KACJ;;AAvDgB,gBAAY,WAwD7B,MAAM,GAAA,gBAAC,YAAY,EAAE;;;;;AAKjB,YAAI,YAAY,IAAI,IAAI,IAAK,YAAY,KAAK,IAAI,AAAC,IAAK,YAAY,KAAK,YAAY,CAAC,KAAK,AAAC,EAAE;AAC1F,mBAAO;SACV;AACD,YAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;AAC1C,YAAI,aAAa,EAAE;AACf,gBAAM,iBAAiB,GAAG,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AAC9D,gBAAI,iBAAiB,KAAK,CAAC,CAAC,EAAE;AAC1B,6BAAa,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;aAC9C;SACJ;KACJ;;WAvEgB,YAAY;;;qBAAZ,YAAY;;AAyEjC,YAAY,CAAC,KAAK,GAAI,CAAA,UAAU,KAAK,EAAE;AACnC,SAAK,CAAC,cAAc,GAAG,IAAI,CAAC;AAC5B,WAAO,KAAK,CAAC;CAChB,CAAA,CAAC,IAAI,YAAY,EAAE,CAAC,AAAC,CAAC","file":"Subscription.js","sourcesContent":["export default class Subscription {\n    constructor(_unsubscribe) {\n        this.isUnsubscribed = false;\n        if (_unsubscribe) {\n            this._unsubscribe = _unsubscribe;\n        }\n    }\n    _unsubscribe() {\n    }\n    unsubscribe() {\n        if (this.isUnsubscribed) {\n            return;\n        }\n        this.isUnsubscribed = true;\n        const unsubscribe = this._unsubscribe;\n        const subscriptions = this._subscriptions;\n        this._subscriptions = void 0;\n        if (unsubscribe) {\n            unsubscribe.call(this);\n        }\n        if (subscriptions != null) {\n            let index = -1;\n            const len = subscriptions.length;\n            while (++index < len) {\n                subscriptions[index].unsubscribe();\n            }\n        }\n    }\n    add(subscription) {\n        // return early if: \n        //  1. the subscription is null\n        //  2. we're attempting to add our this\n        //  3. we're attempting to add the static `empty` Subscription\n        if (!subscription || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        let sub = subscription;\n        switch (typeof subscription) {\n            case \"function\":\n                sub = new Subscription(subscription);\n            case \"object\":\n                if (sub.isUnsubscribed || typeof sub.unsubscribe !== \"function\") {\n                    break;\n                }\n                else if (this.isUnsubscribed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    const subscriptions = this._subscriptions || (this._subscriptions = []);\n                    subscriptions.push(sub);\n                }\n                break;\n            default:\n                throw new Error('Unrecognized subscription ' + subscription + ' added to Subscription.');\n        }\n    }\n    remove(subscription) {\n        // return early if: \n        //  1. the subscription is null\n        //  2. we're attempting to remove ourthis\n        //  3. we're attempting to remove the static `empty` Subscription\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.isUnsubscribed = true;\n    return empty;\n}(new Subscription()));\n//# sourceMappingURL=Subscription.js.map"]}