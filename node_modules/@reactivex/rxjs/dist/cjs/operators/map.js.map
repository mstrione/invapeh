{"version":3,"sources":["../../es6/operators/map.js"],"names":[],"mappings":";;;qBAYwB,GAAG;;;;;;;;2BAZJ,eAAe;;;;4BACjB,kBAAkB;;;;+BACX,qBAAqB;;gCACxB,sBAAsB;;;;;;;;;;;;;AAShC,SAAS,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE;AAC1C,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;CACvD;;IACK,WAAW;AACF,aADT,WAAW,CACD,OAAO,EAAE,OAAO,EAAE;8BAD5B,WAAW;;AAET,YAAI,CAAC,OAAO,GAAG,8BAAa,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;KACpD;;AAHC,eAAW,WAIb,IAAI,GAAA,cAAC,UAAU,EAAE;AACb,eAAO,IAAI,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACtD;;WANC,WAAW;;;IAQX,aAAa;cAAb,aAAa;;AACJ,aADT,aAAa,CACH,WAAW,EAAE,OAAO,EAAE;8BADhC,aAAa;;AAEX,+BAAM,WAAW,CAAC,CAAC;AACnB,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;;;AALC,iBAAa,WAMf,KAAK,GAAA,eAAC,CAAC,EAAE;AACL,YAAM,MAAM,GAAG,0BAAS,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACvD,YAAI,MAAM,iCAAgB,EAAE;AACxB,gBAAI,CAAC,KAAK,CAAC,6BAAY,CAAC,CAAC,CAAC;SAC7B,MACI;AACD,gBAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC;KACJ;;WAdC,aAAa","file":"map.js","sourcesContent":["import Subscriber from '../Subscriber';\nimport tryCatch from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport bindCallback from '../util/bindCallback';\n/**\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the returned observable\n *\n * @param {Function} project the function to create projection\n * @param {any} [thisArg] an optional argument to define what `this` is in the project function\n * @returns {Observable} a observable of projected values\n */\nexport default function map(project, thisArg) {\n    return this.lift(new MapOperator(project, thisArg));\n}\nclass MapOperator {\n    constructor(project, thisArg) {\n        this.project = bindCallback(project, thisArg, 2);\n    }\n    call(subscriber) {\n        return new MapSubscriber(subscriber, this.project);\n    }\n}\nclass MapSubscriber extends Subscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.count = 0;\n        this.project = project;\n    }\n    _next(x) {\n        const result = tryCatch(this.project)(x, this.count++);\n        if (result === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            this.destination.next(result);\n        }\n    }\n}\n//# sourceMappingURL=map.js.map"]}