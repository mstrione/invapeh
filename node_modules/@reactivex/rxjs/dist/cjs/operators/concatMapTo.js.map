{"version":3,"sources":["../../es6/operators/concatMapTo.js"],"names":[],"mappings":";;;qBAcwB,WAAW;;iCAdA,sBAAsB;;;;;;;;;;;;;;;;AAc1C,SAAS,WAAW,CAAC,UAAU,EAAE,aAAa,EAAE;AAC3D,SAAO,IAAI,CAAC,IAAI,CAAC,0CAAuB,UAAU,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;CAC1E","file":"concatMapTo.js","sourcesContent":["import { MergeMapToOperator } from './mergeMapTo-support';\n/**\n * Maps values from the source to a specific observable, and merges them together in a serialized fashion.\n *\n * @param {Observable} observable the observable to map each source value to\n * @param {function} [projectResult] an optional result selector that is applied to values before they're\n * merged into the returned observable. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @returns {Observable} an observable of values merged together by joining the passed observable\n * with itself, one after the other, for each value emitted from the source.\n */\nexport default function concatMapTo(observable, projectResult) {\n    return this.lift(new MergeMapToOperator(observable, projectResult, 1));\n}\n//# sourceMappingURL=concatMapTo.js.map"]}