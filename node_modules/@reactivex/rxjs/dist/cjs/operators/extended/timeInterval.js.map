{"version":3,"sources":["../../../es6/operators/extended/timeInterval.js"],"names":[],"mappings":";;;qBAEwB,YAAY;;;;;;;;2BAFb,kBAAkB;;;;mCACnB,4BAA4B;;;;AACnC,SAAS,YAAY,GAAwB;QAAvB,SAAS;;AAC1C,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC;CACzD;;IACY,YAAY,GACV,SADF,YAAY,CACT,KAAK,EAAE,QAAQ,EAAE;0BADpB,YAAY;;AAEjB,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;CAC5B;;;;AAEL,CAAC;;IACK,oBAAoB;AACX,aADT,oBAAoB,CACV,SAAS,EAAE;8BADrB,oBAAoB;;AAElB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;AAHC,wBAAoB,WAItB,IAAI,GAAA,cAAC,QAAQ,EAAE;AACX,eAAO,IAAI,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KAC/D;;WANC,oBAAoB;;;IAQpB,sBAAsB;cAAtB,sBAAsB;;AACb,aADT,sBAAsB,CACZ,WAAW,EAAE,SAAS,EAAE;8BADlC,sBAAsB;;AAEpB,+BAAM,WAAW,CAAC,CAAC;AACnB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,YAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;KACnC;;;;AANC,0BAAsB,WAOxB,KAAK,GAAA,eAAC,KAAK,EAAE;AACT,YAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AAC/B,YAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC/B,YAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AACpB,YAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;KACxD;;WAZC,sBAAsB","file":"timeInterval.js","sourcesContent":["import Subscriber from '../../Subscriber';\nimport immediate from '../../schedulers/immediate';\nexport default function timeInterval(scheduler = immediate) {\n    return this.lift(new TimeIntervalOperator(scheduler));\n}\nexport class TimeInterval {\n    constructor(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n}\n;\nclass TimeIntervalOperator {\n    constructor(scheduler) {\n        this.scheduler = scheduler;\n    }\n    call(observer) {\n        return new TimeIntervalSubscriber(observer, this.scheduler);\n    }\n}\nclass TimeIntervalSubscriber extends Subscriber {\n    constructor(destination, scheduler) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.lastTime = 0;\n        this.lastTime = scheduler.now();\n    }\n    _next(value) {\n        let now = this.scheduler.now();\n        let span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    }\n}\n//# sourceMappingURL=timeInterval.js.map"]}