{"version":3,"sources":["../../es6/operators/toPromise.js"],"names":[],"mappings":";;;qBACwB,SAAS;;wBADZ,cAAc;;AACpB,SAAS,SAAS,CAAC,WAAW,EAAE;;;AAC3C,QAAI,CAAC,WAAW,EAAE;AACd,YAAI,eAAK,EAAE,IAAI,eAAK,EAAE,CAAC,MAAM,IAAI,eAAK,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE;AACrD,uBAAW,GAAG,eAAK,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;SACxC,MACI,IAAI,eAAK,OAAO,EAAE;AACnB,uBAAW,GAAG,eAAK,OAAO,CAAC;SAC9B;KACJ;AACD,QAAI,CAAC,WAAW,EAAE;AACd,cAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;KAC5C;AACD,WAAO,IAAI,WAAW,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACxC,YAAI,KAAK,YAAA,CAAC;AACV,cAAK,SAAS,CAAC,UAAA,CAAC;mBAAI,KAAK,GAAG,CAAC;SAAA,EAAE,UAAA,GAAG;mBAAI,MAAM,CAAC,GAAG,CAAC;SAAA,EAAE;mBAAM,OAAO,CAAC,KAAK,CAAC;SAAA,CAAC,CAAC;KAC5E,CAAC,CAAC;CACN","file":"toPromise.js","sourcesContent":["import { root } from '../util/root';\nexport default function toPromise(PromiseCtor) {\n    if (!PromiseCtor) {\n        if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n            PromiseCtor = root.Rx.config.Promise;\n        }\n        else if (root.Promise) {\n            PromiseCtor = root.Promise;\n        }\n    }\n    if (!PromiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return new PromiseCtor((resolve, reject) => {\n        let value;\n        this.subscribe(x => value = x, err => reject(err), () => resolve(value));\n    });\n}\n//# sourceMappingURL=toPromise.js.map"]}