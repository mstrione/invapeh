{"version":3,"sources":["../../es6/operators/retry.js"],"names":[],"mappings":"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","file":"retry.js","sourcesContent":["import Subscriber from '../Subscriber';\nexport default function retry(count = 0) {\n    return this.lift(new RetryOperator(count, this));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber) {\n        return new FirstRetrySubscriber(subscriber, this.count, this.source);\n    }\n}\nclass FirstRetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(null);\n        this.destination = destination;\n        this.count = count;\n        this.source = source;\n        this.lastSubscription = this;\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    error(error) {\n        if (!this.isUnsubscribed) {\n            super.unsubscribe();\n            this.resubscribe();\n        }\n    }\n    _complete() {\n        super.unsubscribe();\n        this.destination.complete();\n    }\n    unsubscribe() {\n        const lastSubscription = this.lastSubscription;\n        if (lastSubscription === this) {\n            super.unsubscribe();\n        }\n        else {\n            lastSubscription.unsubscribe();\n        }\n    }\n    resubscribe(retried = 0) {\n        this.lastSubscription.unsubscribe();\n        const nextSubscriber = new RetryMoreSubscriber(this, this.count, retried + 1);\n        this.lastSubscription = this.source.subscribe(nextSubscriber);\n    }\n}\nclass RetryMoreSubscriber extends Subscriber {\n    constructor(parent, count, retried = 0) {\n        super(null);\n        this.parent = parent;\n        this.count = count;\n        this.retried = retried;\n    }\n    _next(value) {\n        this.parent.destination.next(value);\n    }\n    _error(err) {\n        const parent = this.parent;\n        const retried = this.retried;\n        const count = this.count;\n        if (count && retried === count) {\n            parent.destination.error(err);\n        }\n        else {\n            parent.resubscribe(retried);\n        }\n    }\n    _complete() {\n        this.parent.destination.complete();\n    }\n}\n//# sourceMappingURL=retry.js.map"]}