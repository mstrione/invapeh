{"version":3,"sources":["../../es6/operators/switchMapTo.js"],"names":[],"mappings":";;;qBAIwB,WAAW;;;;;;;;4BAJd,kBAAkB;;;;+BACX,qBAAqB;;gCACrB,oBAAoB;;;;qCAClB,2BAA2B;;;;AAC1C,SAAS,WAAW,CAAC,UAAU,EAAE,aAAa,EAAE;AAC3D,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC;CACxE;;IACK,mBAAmB;AACV,aADT,mBAAmB,CACT,UAAU,EAAE,cAAc,EAAE;8BADtC,mBAAmB;;AAEjB,YAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,YAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACxC;;AAJC,uBAAmB,WAKrB,IAAI,GAAA,cAAC,UAAU,EAAE;AACb,eAAO,IAAI,qBAAqB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KACtF;;WAPC,mBAAmB;;;IASnB,qBAAqB;cAArB,qBAAqB;;AACZ,aADT,qBAAqB,CACX,WAAW,EAAE,KAAK,EAAE,cAAc,EAAE;8BAD9C,qBAAqB;;AAEnB,oCAAM,WAAW,CAAC,CAAC;AACnB,YAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AACrC,YAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC1B,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAClB;;;;AAPC,yBAAqB,WAQvB,KAAK,GAAA,eAAC,KAAK,EAAE;AACT,YAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC3B,YAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACjD,YAAI,iBAAiB,EAAE;AACnB,6BAAiB,CAAC,WAAW,EAAE,CAAC;SACnC;AACD,YAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,mCAAkB,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACxF;;AAfC,yBAAqB,WAgBvB,SAAS,GAAA,qBAAG;AACR,YAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACjD,YAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,YAAI,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,cAAc,EAAE;AACxD,gBAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC/B;KACJ;;AAtBC,yBAAqB,WAuBvB,cAAc,GAAA,wBAAC,QAAQ,EAAE;AACrB,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACtB,YAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;AAChD,YAAI,gBAAgB,EAAE;AAClB,4BAAgB,CAAC,WAAW,EAAE,CAAC;SAClC;AACD,YAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAC9B,YAAI,IAAI,CAAC,YAAY,EAAE;AACnB,gBAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC/B;KACJ;;AAjCC,yBAAqB,WAkCvB,WAAW,GAAA,qBAAC,GAAG,EAAE;AACb,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAC/B;;AApCC,yBAAqB,WAqCvB,UAAU,GAAA,oBAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;YAC/C,cAAc,GAAkB,IAAI,CAApC,cAAc;YAAE,WAAW,GAAK,IAAI,CAApB,WAAW;;AACnC,YAAI,cAAc,EAAE;AAChB,gBAAM,MAAM,GAAG,0BAAS,cAAc,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AACxF,gBAAI,MAAM,iCAAgB,EAAE;AACxB,2BAAW,CAAC,KAAK,CAAC,6BAAY,CAAC,CAAC,CAAC;aACpC,MACI;AACD,2BAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC5B;SACJ,MACI;AACD,uBAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAChC;KACJ;;WAnDC,qBAAqB","file":"switchMapTo.js","sourcesContent":["import tryCatch from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport OuterSubscriber from '../OuterSubscriber';\nimport subscribeToResult from '../util/subscribeToResult';\nexport default function switchMapTo(observable, projectResult) {\n    return this.lift(new SwitchMapToOperator(observable, projectResult));\n}\nclass SwitchMapToOperator {\n    constructor(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber) {\n        return new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector);\n    }\n}\nclass SwitchMapToSubscriber extends OuterSubscriber {\n    constructor(destination, inner, resultSelector) {\n        super(destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    _next(value) {\n        const index = this.index++;\n        const innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, index));\n    }\n    _complete() {\n        const innerSubscription = this.innerSubscription;\n        this.hasCompleted = true;\n        if (!innerSubscription || innerSubscription.isUnsubscribed) {\n            this.destination.complete();\n        }\n    }\n    notifyComplete(innerSub) {\n        this.remove(innerSub);\n        const prevSubscription = this.innerSubscription;\n        if (prevSubscription) {\n            prevSubscription.unsubscribe();\n        }\n        this.innerSubscription = null;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex) {\n        const { resultSelector, destination } = this;\n        if (resultSelector) {\n            const result = tryCatch(resultSelector)(outerValue, innerValue, outerIndex, innerIndex);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                destination.next(result);\n            }\n        }\n        else {\n            destination.next(innerValue);\n        }\n    }\n}\n//# sourceMappingURL=switchMapTo.js.map"]}