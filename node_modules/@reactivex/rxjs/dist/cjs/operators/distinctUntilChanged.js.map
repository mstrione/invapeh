{"version":3,"sources":["../../es6/operators/distinctUntilChanged.js"],"names":[],"mappings":";;;qBAIwB,oBAAoB;;;;;;;;2BAJrB,eAAe;;;;4BACjB,kBAAkB;;;;+BACX,qBAAqB;;gCACxB,sBAAsB;;;;AAChC,SAAS,oBAAoB,CAAC,OAAO,EAAE,OAAO,EAAE;AAC3D,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,4BAA4B,CAAC,OAAO,GACrD,8BAAa,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GACjC,OAAO,CAAC,CAAC,CAAC;CACjB;;IACK,4BAA4B;AACnB,aADT,4BAA4B,CAClB,OAAO,EAAE;8BADnB,4BAA4B;;AAE1B,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;AAHC,gCAA4B,WAI9B,IAAI,GAAA,cAAC,UAAU,EAAE;AACb,eAAO,IAAI,8BAA8B,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACvE;;WANC,4BAA4B;;;IAQ5B,8BAA8B;cAA9B,8BAA8B;;AACrB,aADT,8BAA8B,CACpB,WAAW,EAAE,OAAO,EAAE;8BADhC,8BAA8B;;AAE5B,+BAAM,WAAW,CAAC,CAAC;AACnB,YAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,YAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AAC/B,gBAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;KACJ;;;;AAPC,kCAA8B,WAQhC,OAAO,GAAA,iBAAC,CAAC,EAAE,CAAC,EAAE;AACV,eAAO,CAAC,KAAK,CAAC,CAAC;KAClB;;AAVC,kCAA8B,WAWhC,KAAK,GAAA,eAAC,CAAC,EAAE;AACL,YAAI,MAAM,GAAG,KAAK,CAAC;AACnB,YAAI,IAAI,CAAC,QAAQ,EAAE;AACf,kBAAM,GAAG,0BAAS,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC/C,gBAAI,MAAM,iCAAgB,EAAE;AACxB,oBAAI,CAAC,WAAW,CAAC,KAAK,CAAC,6BAAY,CAAC,CAAC,CAAC;AACtC,uBAAO;aACV;SACJ,MACI;AACD,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;AACD,YAAI,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE;AAC3B,gBAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,gBAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5B;KACJ;;WA3BC,8BAA8B","file":"distinctUntilChanged.js","sourcesContent":["import Subscriber from '../Subscriber';\nimport tryCatch from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport bindCallback from '../util/bindCallback';\nexport default function distinctUntilChanged(compare, thisArg) {\n    return this.lift(new DistinctUntilChangedOperator(thisArg ?\n        bindCallback(compare, thisArg, 2) :\n        compare));\n}\nclass DistinctUntilChangedOperator {\n    constructor(compare) {\n        this.compare = compare;\n    }\n    call(subscriber) {\n        return new DistinctUntilChangedSubscriber(subscriber, this.compare);\n    }\n}\nclass DistinctUntilChangedSubscriber extends Subscriber {\n    constructor(destination, compare) {\n        super(destination);\n        this.hasValue = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    compare(x, y) {\n        return x === y;\n    }\n    _next(x) {\n        let result = false;\n        if (this.hasValue) {\n            result = tryCatch(this.compare)(this.value, x);\n            if (result === errorObject) {\n                this.destination.error(errorObject.e);\n                return;\n            }\n        }\n        else {\n            this.hasValue = true;\n        }\n        if (Boolean(result) === false) {\n            this.value = x;\n            this.destination.next(x);\n        }\n    }\n}\n//# sourceMappingURL=distinctUntilChanged.js.map"]}