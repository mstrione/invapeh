{"version":3,"sources":["../../es6/operators/single.js"],"names":[],"mappings":";;;qBAKwB,MAAM;;;;;;;;2BALP,eAAe;;;;4BACjB,kBAAkB;;;;+BACX,qBAAqB;;gCACxB,sBAAsB;;;;8BACxB,oBAAoB;;;;AAC5B,SAAS,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE;AAC/C,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;CAClE;;IACK,cAAc;AACL,aADT,cAAc,CACJ,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE;8BADtC,cAAc;;AAEZ,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;AALC,kBAAc,WAMhB,IAAI,GAAA,cAAC,UAAU,EAAE;AACb,eAAO,IAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACtF;;WARC,cAAc;;;IAUd,gBAAgB;cAAhB,gBAAgB;;AACP,aADT,gBAAgB,CACN,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE;8BADnD,gBAAgB;;AAEd,+BAAM,WAAW,CAAC,CAAC;AACnB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAI,OAAO,SAAS,KAAK,UAAU,EAAE;AACjC,gBAAI,CAAC,SAAS,GAAG,8BAAa,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;SACxD;KACJ;;;;AAVC,oBAAgB,WAWlB,gBAAgB,GAAA,0BAAC,KAAK,EAAE;AACpB,YAAI,IAAI,CAAC,SAAS,EAAE;AAChB,gBAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;SACrE,MACI;AACD,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,gBAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC5B;KACJ;;AAnBC,oBAAgB,WAoBlB,KAAK,GAAA,eAAC,KAAK,EAAE;AACT,YAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACjC,YAAM,YAAY,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAClC,YAAI,SAAS,EAAE;AACX,gBAAI,MAAM,GAAG,0BAAS,SAAS,CAAC,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACnE,gBAAI,MAAM,iCAAgB,EAAE;AACxB,oBAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACpC,MACI,IAAI,MAAM,EAAE;AACb,oBAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAChC;SACJ,MACI;AACD,gBAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAChC;KACJ;;AAnCC,oBAAgB,WAoClB,SAAS,GAAA,qBAAG;AACR,YAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,YAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;AAChB,uBAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC;AAChE,uBAAW,CAAC,QAAQ,EAAE,CAAC;SAC1B,MACI;AACD,uBAAW,CAAC,KAAK,CAAC,iCAAc,CAAC,CAAC;SACrC;KACJ;;WA7CC,gBAAgB","file":"single.js","sourcesContent":["import Subscriber from '../Subscriber';\nimport tryCatch from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport bindCallback from '../util/bindCallback';\nimport EmptyError from '../util/EmptyError';\nexport default function single(predicate, thisArg) {\n    return this.lift(new SingleOperator(predicate, thisArg, this));\n}\nclass SingleOperator {\n    constructor(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    call(subscriber) {\n        return new SingleSubscriber(subscriber, this.predicate, this.thisArg, this.source);\n    }\n}\nclass SingleSubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg, source) {\n        super(destination);\n        this.thisArg = thisArg;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n        if (typeof predicate === 'function') {\n            this.predicate = bindCallback(predicate, thisArg, 3);\n        }\n    }\n    applySingleValue(value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    }\n    _next(value) {\n        const predicate = this.predicate;\n        const currentIndex = this.index++;\n        if (predicate) {\n            let result = tryCatch(predicate)(value, currentIndex, this.source);\n            if (result === errorObject) {\n                this.destination.error(result.e);\n            }\n            else if (result) {\n                this.applySingleValue(value);\n            }\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    }\n}\n//# sourceMappingURL=single.js.map"]}