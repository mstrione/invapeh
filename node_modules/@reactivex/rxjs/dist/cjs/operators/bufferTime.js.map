{"version":3,"sources":["../../es6/operators/bufferTime.js"],"names":[],"mappings":"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","file":"bufferTime.js","sourcesContent":["import Subscriber from '../Subscriber';\nimport nextTick from '../schedulers/nextTick';\n/**\n * buffers values from the source for a specific time period. Optionally allows new buffers to be set up at an interval.\n * @param {number} the amount of time to fill each buffer for before emitting them and clearing them.\n * @param {number} [bufferCreationInterval] the interval at which to start new buffers.\n * @param {Scheduler} [scheduler] (optional, defaults to `nextTick` scheduler) The scheduler on which to schedule the\n *  intervals that determine buffer boundaries.\n * @returns {Observable<T[]>} an observable of arrays of buffered values.\n */\nexport default function bufferTime(bufferTimeSpan, bufferCreationInterval = null, scheduler = nextTick) {\n    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, scheduler));\n}\nclass BufferTimeOperator {\n    constructor(bufferTimeSpan, bufferCreationInterval, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.scheduler = scheduler;\n    }\n    call(subscriber) {\n        return new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.scheduler);\n    }\n}\nclass BufferTimeSubscriber extends Subscriber {\n    constructor(destination, bufferTimeSpan, bufferCreationInterval, scheduler) {\n        super(destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.scheduler = scheduler;\n        this.buffers = [];\n        let buffer = this.openBuffer();\n        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n            const closeState = { subscriber: this, buffer };\n            const creationState = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n            this.add(scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        else {\n            const timeSpanOnlyState = { subscriber: this, buffer, bufferTimeSpan };\n            this.add(scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    }\n    _next(value) {\n        const buffers = this.buffers;\n        const len = buffers.length;\n        for (let i = 0; i < len; i++) {\n            buffers[i].push(value);\n        }\n    }\n    _error(err) {\n        this.buffers.length = 0;\n        this.destination.error(err);\n    }\n    _complete() {\n        const buffers = this.buffers;\n        while (buffers.length > 0) {\n            this.destination.next(buffers.shift());\n        }\n        this.destination.complete();\n    }\n    openBuffer() {\n        let buffer = [];\n        this.buffers.push(buffer);\n        return buffer;\n    }\n    closeBuffer(buffer) {\n        this.destination.next(buffer);\n        const buffers = this.buffers;\n        buffers.splice(buffers.indexOf(buffer), 1);\n    }\n}\nfunction dispatchBufferTimeSpanOnly(state) {\n    const subscriber = state.subscriber;\n    const prevBuffer = state.buffer;\n    if (prevBuffer) {\n        subscriber.closeBuffer(prevBuffer);\n    }\n    state.buffer = subscriber.openBuffer();\n    if (!subscriber.isUnsubscribed) {\n        this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    let { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n    let buffer = subscriber.openBuffer();\n    let action = this;\n    if (!subscriber.isUnsubscribed) {\n        action.add(scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber, buffer }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose({ subscriber, buffer }) {\n    subscriber.closeBuffer(buffer);\n}\n//# sourceMappingURL=bufferTime.js.map"]}