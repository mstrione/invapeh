{"version":3,"sources":["../../es6/operators/repeat.js"],"names":[],"mappings":"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","file":"repeat.js","sourcesContent":["import Subscriber from '../Subscriber';\nimport EmptyObservable from '../observables/EmptyObservable';\nexport default function repeat(count = -1) {\n    if (count === 0) {\n        return EmptyObservable.create();\n    }\n    else {\n        return this.lift(new RepeatOperator(count, this));\n    }\n}\nclass RepeatOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber) {\n        return new FirstRepeatSubscriber(subscriber, this.count, this.source);\n    }\n}\nclass FirstRepeatSubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(null);\n        this.destination = destination;\n        this.count = count;\n        this.source = source;\n        if (count === 0) {\n            this.destination.complete();\n            super.unsubscribe();\n        }\n        this.lastSubscription = this;\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        this.destination.error(err);\n    }\n    complete() {\n        if (!this.isUnsubscribed) {\n            this.resubscribe(this.count);\n        }\n    }\n    unsubscribe() {\n        const lastSubscription = this.lastSubscription;\n        if (lastSubscription === this) {\n            super.unsubscribe();\n        }\n        else {\n            lastSubscription.unsubscribe();\n        }\n    }\n    resubscribe(count) {\n        this.lastSubscription.unsubscribe();\n        if (count - 1 === 0) {\n            this.destination.complete();\n        }\n        else {\n            const nextSubscriber = new MoreRepeatSubscriber(this, count - 1);\n            this.lastSubscription = this.source.subscribe(nextSubscriber);\n        }\n    }\n}\nclass MoreRepeatSubscriber extends Subscriber {\n    constructor(parent, count) {\n        super(null);\n        this.parent = parent;\n        this.count = count;\n    }\n    _next(value) {\n        this.parent.destination.next(value);\n    }\n    _error(err) {\n        this.parent.destination.error(err);\n    }\n    _complete() {\n        const count = this.count;\n        this.parent.resubscribe(count < 0 ? -1 : count);\n    }\n}\n//# sourceMappingURL=repeat.js.map"]}