{"version":3,"sources":["../../es6/operators/withLatestFrom.js"],"names":[],"mappings":"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","file":"withLatestFrom.js","sourcesContent":["import tryCatch from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport OuterSubscriber from '../OuterSubscriber';\nimport subscribeToResult from '../util/subscribeToResult';\n/**\n * @param {Observable} observables the observables to get the latest values from.\n * @param {Function} [project] optional projection function for merging values together. Receives all values in order\n *  of observables passed. (e.g. `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not passed, arrays\n *  will be returned.\n * @description merges each value from an observable with the latest values from the other passed observables.\n * All observables must emit at least one value before the resulting observable will emit\n *\n * #### example\n * ```\n * A.withLatestFrom(B, C)\n *\n *  A:     ----a-----------------b---------------c-----------|\n *  B:     ---d----------------e--------------f---------|\n *  C:     --x----------------y-------------z-------------|\n * result: ---([a,d,x])---------([b,e,y])--------([c,f,z])---|\n * ```\n */\nexport default function withLatestFrom(...args) {\n    let project;\n    if (typeof args[args.length - 1] === 'function') {\n        project = args.pop();\n    }\n    const observables = args;\n    return this.lift(new WithLatestFromOperator(observables, project));\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber) {\n        return new WithLatestFromSubscriber(subscriber, this.observables, this.project);\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    notifyNext(observable, value, observableIndex, index) {\n        this.values[observableIndex] = value;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(observableIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n        // noop\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const values = this.values;\n            const destination = this.destination;\n            const project = this.project;\n            const args = [value, ...values];\n            if (project) {\n                let result = tryCatch(this.project).apply(this, args);\n                if (result === errorObject) {\n                    destination.error(result.e);\n                }\n                else {\n                    destination.next(result);\n                }\n            }\n            else {\n                destination.next(args);\n            }\n        }\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map"]}