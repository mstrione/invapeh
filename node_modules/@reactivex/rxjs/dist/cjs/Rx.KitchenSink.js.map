{"version":3,"sources":["../es6/Rx.KitchenSink.js"],"names":[],"mappings":"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","file":"Rx.KitchenSink.js","sourcesContent":["import Observable from './Observable';\nimport combineLatestStatic from './operators/combineLatest-static';\nObservable.combineLatest = combineLatestStatic;\nimport concatStatic from './operators/concat-static';\nObservable.concat = concatStatic;\nimport DeferObservable from './observables/DeferObservable';\nObservable.defer = DeferObservable.create;\nimport EmptyObservable from './observables/EmptyObservable';\nObservable.empty = EmptyObservable.create;\nimport ForkJoinObservable from './observables/ForkJoinObservable';\nObservable.forkJoin = ForkJoinObservable.create;\nimport FromObservable from './observables/FromObservable';\nObservable.from = FromObservable.create;\nimport ArrayObservable from './observables/ArrayObservable';\nObservable.fromArray = ArrayObservable.create;\nimport FromEventObservable from './observables/FromEventObservable';\nObservable.fromEvent = FromEventObservable.create;\nimport FromEventPatternObservable from './observables/FromEventPatternObservable';\nObservable.fromEventPattern = FromEventPatternObservable.create;\nimport PromiseObservable from './observables/PromiseObservable';\nObservable.fromPromise = PromiseObservable.create;\nimport IntervalObservable from './observables/IntervalObservable';\nObservable.interval = IntervalObservable.create;\nimport mergeStatic from './operators/merge-static';\nObservable.merge = mergeStatic;\nimport InfiniteObservable from './observables/InfiniteObservable';\nObservable.never = InfiniteObservable.create;\nObservable.of = ArrayObservable.of;\nimport RangeObservable from './observables/RangeObservable';\nObservable.range = RangeObservable.create;\nimport ErrorObservable from './observables/ErrorObservable';\nObservable.throw = ErrorObservable.create;\nimport TimerObservable from './observables/TimerObservable';\nObservable.timer = TimerObservable.create;\nimport zipStatic from './operators/zip-static';\nObservable.zip = zipStatic;\n// Operators\nconst observableProto = Observable.prototype;\nimport buffer from './operators/buffer';\nobservableProto.buffer = buffer;\nimport bufferCount from './operators/bufferCount';\nobservableProto.bufferCount = bufferCount;\nimport bufferTime from './operators/bufferTime';\nobservableProto.bufferTime = bufferTime;\nimport bufferToggle from './operators/bufferToggle';\nobservableProto.bufferToggle = bufferToggle;\nimport bufferWhen from './operators/bufferWhen';\nobservableProto.bufferWhen = bufferWhen;\nimport _catch from './operators/catch';\nobservableProto.catch = _catch;\nimport combineAll from './operators/combineAll';\nobservableProto.combineAll = combineAll;\nimport combineLatest from './operators/combineLatest';\nobservableProto.combineLatest = combineLatest;\nimport concat from './operators/concat';\nobservableProto.concat = concat;\nimport concatAll from './operators/concatAll';\nobservableProto.concatAll = concatAll;\nimport concatMap from './operators/concatMap';\nobservableProto.concatMap = concatMap;\nimport concatMapTo from './operators/concatMapTo';\nobservableProto.concatMapTo = concatMapTo;\nimport count from './operators/count';\nobservableProto.count = count;\nimport dematerialize from './operators/dematerialize';\nobservableProto.dematerialize = dematerialize;\nimport debounce from './operators/debounce';\nobservableProto.debounce = debounce;\nimport debounceTime from './operators/debounceTime';\nobservableProto.debounceTime = debounceTime;\nimport defaultIfEmpty from './operators/defaultIfEmpty';\nobservableProto.defaultIfEmpty = defaultIfEmpty;\nimport delay from './operators/delay';\nobservableProto.delay = delay;\nimport distinctUntilChanged from './operators/distinctUntilChanged';\nobservableProto.distinctUntilChanged = distinctUntilChanged;\nimport distinctUntilKeyChanged from './operators/extended/distinctUntilKeyChanged';\nobservableProto.distinctUntilKeyChanged = distinctUntilKeyChanged;\nimport _do from './operators/do';\nobservableProto.do = _do;\nimport elementAt from './operators/extended/elementAt';\nobservableProto.elementAt = elementAt;\nimport expand from './operators/expand';\nobservableProto.expand = expand;\nimport filter from './operators/filter';\nobservableProto.filter = filter;\nimport find from './operators/extended/find';\nobservableProto.find = find;\nimport findIndex from './operators/extended/findIndex';\nobservableProto.findIndex = findIndex;\nimport _finally from './operators/finally';\nobservableProto.finally = _finally;\nimport first from './operators/first';\nobservableProto.first = first;\nimport { groupBy } from './operators/groupBy';\nobservableProto.groupBy = groupBy;\nimport ignoreElements from './operators/ignoreElements';\nobservableProto.ignoreElements = ignoreElements;\nimport isEmpty from './operators/extended/isEmpty';\nobservableProto.isEmpty = isEmpty;\nimport every from './operators/every';\nobservableProto.every = every;\nimport last from './operators/last';\nobservableProto.last = last;\nimport map from './operators/map';\nobservableProto.map = map;\nimport mapTo from './operators/mapTo';\nobservableProto.mapTo = mapTo;\nimport materialize from './operators/materialize';\nobservableProto.materialize = materialize;\nimport max from './operators/extended/max';\nobservableProto.max = max;\nimport merge from './operators/merge';\nobservableProto.merge = merge;\nimport mergeAll from './operators/mergeAll';\nobservableProto.mergeAll = mergeAll;\nimport mergeMap from './operators/mergeMap';\nobservableProto.mergeMap = mergeMap;\nobservableProto.flatMap = mergeMap;\nimport mergeMapTo from './operators/mergeMapTo';\nobservableProto.mergeMapTo = mergeMapTo;\nobservableProto.flatMapTo = mergeMapTo;\nimport min from './operators/extended/min';\nobservableProto.min = min;\nimport multicast from './operators/multicast';\nobservableProto.multicast = multicast;\nimport observeOn from './operators/observeOn';\nobservableProto.observeOn = observeOn;\nimport partition from './operators/partition';\nobservableProto.partition = partition;\nimport publish from './operators/publish';\nobservableProto.publish = publish;\nimport publishBehavior from './operators/publishBehavior';\nobservableProto.publishBehavior = publishBehavior;\nimport publishReplay from './operators/publishReplay';\nobservableProto.publishReplay = publishReplay;\nimport reduce from './operators/reduce';\nobservableProto.reduce = reduce;\nimport repeat from './operators/repeat';\nobservableProto.repeat = repeat;\nimport retry from './operators/retry';\nobservableProto.retry = retry;\nimport retryWhen from './operators/retryWhen';\nobservableProto.retryWhen = retryWhen;\nimport sample from './operators/sample';\nobservableProto.sample = sample;\nimport sampleTime from './operators/sampleTime';\nobservableProto.sampleTime = sampleTime;\nimport scan from './operators/scan';\nobservableProto.scan = scan;\nimport share from './operators/share';\nobservableProto.share = share;\nimport shareBehavior from './operators/shareBehavior';\nobservableProto.shareBehavior = shareBehavior;\nimport shareReplay from './operators/shareReplay';\nobservableProto.shareReplay = shareReplay;\nimport single from './operators/single';\nobservableProto.single = single;\nimport skip from './operators/skip';\nobservableProto.skip = skip;\nimport skipUntil from './operators/skipUntil';\nobservableProto.skipUntil = skipUntil;\nimport startWith from './operators/startWith';\nobservableProto.startWith = startWith;\nimport subscribeOn from './operators/subscribeOn';\nobservableProto.subscribeOn = subscribeOn;\nimport _switch from './operators/switch';\nobservableProto.switch = _switch;\nimport switchMap from './operators/switchMap';\nobservableProto.switchMap = switchMap;\nimport switchMapTo from './operators/switchMapTo';\nobservableProto.switchMapTo = switchMapTo;\nimport take from './operators/take';\nobservableProto.take = take;\nimport takeUntil from './operators/takeUntil';\nobservableProto.takeUntil = takeUntil;\nimport throttle from './operators/throttle';\nobservableProto.throttle = throttle;\nimport timeInterval from './operators/extended/timeInterval';\nobservableProto.timeInterval = timeInterval;\nimport timeout from './operators/timeout';\nobservableProto.timeout = timeout;\nimport timeoutWith from './operators/timeoutWith';\nobservableProto.timeoutWith = timeoutWith;\nimport toArray from './operators/toArray';\nobservableProto.toArray = toArray;\nimport toPromise from './operators/toPromise';\nobservableProto.toPromise = toPromise;\nimport window from './operators/window';\nobservableProto.window = window;\nimport windowCount from './operators/windowCount';\nobservableProto.windowCount = windowCount;\nimport windowTime from './operators/windowTime';\nobservableProto.windowTime = windowTime;\nimport windowToggle from './operators/windowToggle';\nobservableProto.windowToggle = windowToggle;\nimport windowWhen from './operators/windowWhen';\nobservableProto.windowWhen = windowWhen;\nimport withLatestFrom from './operators/withLatestFrom';\nobservableProto.withLatestFrom = withLatestFrom;\nimport zip from './operators/zip';\nobservableProto.zip = zip;\nimport zipAll from './operators/zipAll';\nobservableProto.zipAll = zipAll;\nimport Subject from './Subject';\nimport Subscription from './Subscription';\nimport Subscriber from './Subscriber';\nimport ReplaySubject from './subjects/ReplaySubject';\nimport BehaviorSubject from './subjects/BehaviorSubject';\nimport ConnectableObservable from './observables/ConnectableObservable';\nimport Notification from './Notification';\nimport EmptyError from './util/EmptyError';\nimport ArgumentOutOfRangeError from './util/ArgumentOutOfRangeError';\nimport nextTick from './schedulers/nextTick';\nimport immediate from './schedulers/immediate';\nimport { TimeInterval } from './operators/extended/timeInterval';\nimport { TestScheduler } from './testing/TestScheduler';\nimport VirtualTimeScheduler from './schedulers/VirtualTimeScheduler';\nvar Scheduler = {\n    nextTick,\n    immediate\n};\nexport { Subject, Scheduler, Observable, Subscriber, Subscription, ReplaySubject, BehaviorSubject, ConnectableObservable, Notification, EmptyError, ArgumentOutOfRangeError, TestScheduler, VirtualTimeScheduler, TimeInterval };\n//# sourceMappingURL=Rx.KitchenSink.js.map"]}