{"version":3,"sources":["../../es6/schedulers/VirtualTimeScheduler.js"],"names":[],"mappings":"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","file":"VirtualTimeScheduler.js","sourcesContent":["import Subscription from '../Subscription';\nexport default class VirtualTimeScheduler {\n    constructor() {\n        this.actions = [];\n        this.active = false;\n        this.scheduled = false;\n        this.index = 0;\n        this.sorted = false;\n        this.frame = 0;\n        this.maxFrames = 750;\n    }\n    now() {\n        return this.frame;\n    }\n    flush() {\n        const actions = this.actions;\n        const maxFrames = this.maxFrames;\n        while (actions.length > 0) {\n            let action = actions.shift();\n            this.frame = action.delay;\n            if (this.frame <= maxFrames) {\n                action.execute();\n            }\n            else {\n                break;\n            }\n        }\n        actions.length = 0;\n        this.frame = 0;\n    }\n    addAction(action) {\n        const actions = this.actions;\n        actions.push(action);\n        actions.sort((a, b) => {\n            if (a.delay === b.delay) {\n                if (a.index === b.index) {\n                    return 0;\n                }\n                else if (a.index > b.index) {\n                    return 1;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (a.delay > b.delay) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        });\n    }\n    schedule(work, delay = 0, state) {\n        this.sorted = false;\n        return new VirtualAction(this, work, this.index++).schedule(state, delay);\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nclass VirtualAction extends Subscription {\n    constructor(scheduler, work, index) {\n        super();\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.calls = 0;\n    }\n    schedule(state, delay = 0) {\n        if (this.isUnsubscribed) {\n            return this;\n        }\n        const scheduler = this.scheduler;\n        let action;\n        if (this.calls++ === 0) {\n            // the action is not being rescheduled.\n            action = this;\n        }\n        else {\n            // the action is being rescheduled, and we can't mutate the one in the actions list\n            // in the scheduler, so we'll create a new one.\n            action = new VirtualAction(scheduler, this.work, scheduler.index += 1);\n            this.add(action);\n        }\n        action.state = state;\n        action.delay = scheduler.frame + delay;\n        scheduler.addAction(action);\n        return this;\n    }\n    execute() {\n        if (this.isUnsubscribed) {\n            throw new Error('How did did we execute a canceled Action?');\n        }\n        this.work(this.state);\n    }\n    unsubscribe() {\n        const actions = this.scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = void 0;\n        this.state = void 0;\n        this.scheduler = void 0;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        super.unsubscribe();\n    }\n}\n//# sourceMappingURL=VirtualTimeScheduler.js.map"]}