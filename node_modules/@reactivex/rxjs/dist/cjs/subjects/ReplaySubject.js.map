{"version":3,"sources":["../../es6/subjects/ReplaySubject.js"],"names":[],"mappings":";;;;;;;;;;wBAAoB,YAAY;;;;mCACV,yBAAyB;;;;IAC1B,aAAa;cAAb,aAAa;;AACnB,aADM,aAAa,CAClB,UAAU,EAA6B,WAAW,EAA6B,SAAS,EAAE;YAA1F,UAAU,gBAAV,UAAU,GAAG,MAAM,CAAC,iBAAiB;YAAE,WAAW,gBAAX,WAAW,GAAG,MAAM,CAAC,iBAAiB;;8BADxE,aAAa;;AAE1B,2BAAO,CAAC;AACR,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACjB,YAAI,CAAC,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;AAClD,YAAI,CAAC,WAAW,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;AACrD,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;AAPgB,iBAAa,WAQ9B,KAAK,GAAA,eAAC,KAAK,EAAE;AACT,YAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAC3B,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,2BAAM,KAAK,KAAA,OAAC,KAAK,CAAC,CAAC;KACtB;;AAZgB,iBAAa,WAa9B,UAAU,GAAA,oBAAC,UAAU,EAAE;AACnB,YAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/C,YAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACf,YAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;AAC1B,eAAO,CAAC,UAAU,CAAC,cAAc,IAAI,EAAE,KAAK,GAAG,GAAG,EAAE;AAChD,sBAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;SACxC;AACD,eAAO,mBAAM,UAAU,KAAA,OAAC,UAAU,CAAC,CAAC;KACvC;;AArBgB,iBAAa,WAsB9B,OAAO,GAAA,mBAAG;AACN,eAAO,CAAC,IAAI,CAAC,SAAS,qCAAa,CAAE,GAAG,EAAE,CAAC;KAC9C;;AAxBgB,iBAAa,WAyB9B,UAAU,GAAA,oBAAC,GAAG,EAAE;AACZ,YAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,YAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,YAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;AAChC,YAAI,WAAW,GAAG,CAAC,CAAC;;;;AAIpB,eAAO,WAAW,GAAG,WAAW,EAAE;AAC9B,gBAAI,AAAC,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,GAAI,WAAW,EAAE;AAChD,sBAAM;aACT;AACD,uBAAW,IAAI,CAAC,CAAC;SACpB;AACD,YAAI,WAAW,GAAG,UAAU,EAAE;AAC1B,uBAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,GAAG,UAAU,CAAC,CAAC;SACjE;AACD,YAAI,WAAW,GAAG,CAAC,EAAE;AACjB,kBAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACjC;AACD,eAAO,MAAM,CAAC;KACjB;;WA/CgB,aAAa;;;qBAAb,aAAa;;IAiD5B,WAAW,GACF,SADT,WAAW,CACD,IAAI,EAAE,KAAK,EAAE;0BADvB,WAAW;;AAET,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACtB","file":"ReplaySubject.js","sourcesContent":["import Subject from '../Subject';\nimport immediate from '../schedulers/immediate';\nexport default class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, _windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.events = [];\n        this.bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = _windowTime < 1 ? 1 : _windowTime;\n        this.scheduler = scheduler;\n    }\n    _next(value) {\n        const now = this._getNow();\n        this.events.push(new ReplayEvent(now, value));\n        super._next(value);\n    }\n    _subscribe(subscriber) {\n        const events = this._getEvents(this._getNow());\n        let index = -1;\n        const len = events.length;\n        while (!subscriber.isUnsubscribed && ++index < len) {\n            subscriber.next(events[index].value);\n        }\n        return super._subscribe(subscriber);\n    }\n    _getNow() {\n        return (this.scheduler || immediate).now();\n    }\n    _getEvents(now) {\n        const bufferSize = this.bufferSize;\n        const _windowTime = this._windowTime;\n        const events = this.events;\n        let eventsCount = events.length;\n        let spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount += 1;\n        }\n        if (eventsCount > bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - bufferSize);\n        }\n        if (spliceCount > 0) {\n            events.splice(0, spliceCount);\n        }\n        return events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n//# sourceMappingURL=ReplaySubject.js.map"]}