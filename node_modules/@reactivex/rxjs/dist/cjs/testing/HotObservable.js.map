{"version":3,"sources":["../../es6/testing/HotObservable.js"],"names":[],"mappings":";;;;;;;;;;wBAAoB,YAAY;;;;4BACP,iBAAiB;;;;oCACT,wBAAwB;;;;+BACjC,qBAAqB;;;;IACxB,aAAa;cAAb,aAAa;;AACnB,aADM,aAAa,CAClB,QAAQ,EAAE,SAAS,EAAE;8BADhB,aAAa;;AAE1B,2BAAO,CAAC;AACR,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,YAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AACxB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;AANgB,iBAAa,WAO9B,UAAU,GAAA,oBAAC,UAAU,EAAE;AACnB,YAAM,OAAO,GAAG,IAAI,CAAC;AACrB,YAAM,KAAK,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC;AAC3C,kBAAU,CAAC,GAAG,CAAC,8BAAiB,YAAM;AAClC,mBAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SACvC,CAAC,CAAC,CAAC;AACJ,eAAO,mBAAM,UAAU,KAAA,OAAC,UAAU,CAAC,CAAC;KACvC;;AAdgB,iBAAa,WAe9B,KAAK,GAAA,iBAAG;;;AACJ,YAAM,OAAO,GAAG,IAAI,CAAC;AACrB,YAAM,cAAc,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;;8BACtC,CAAC;AACN,gBAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACpC,kBAAK,SAAS,CAAC,QAAQ,CAAC,YAAM;AAAE,uBAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;;;AAF7F,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;kBAAhC,CAAC;SAGT;KACJ;;WAtBgB,aAAa;;;qBAAb,aAAa;;AAwBlC,6BAAY,aAAa,EAAE,mCAAsB,CAAC,CAAC","file":"HotObservable.js","sourcesContent":["import Subject from '../Subject';\nimport Subscription from '../Subscription';\nimport SubscriptionLoggable from './SubscriptionLoggable';\nimport applyMixins from '../util/applyMixins';\nexport default class HotObservable extends Subject {\n    constructor(messages, scheduler) {\n        super();\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    _subscribe(subscriber) {\n        const subject = this;\n        const index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription(() => {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return super._subscribe(subscriber);\n    }\n    setup() {\n        const subject = this;\n        const messagesLength = subject.messages.length;\n        for (let i = 0; i < messagesLength; i++) {\n            const message = subject.messages[i];\n            this.scheduler.schedule(() => { message.notification.observe(subject); }, message.frame);\n        }\n    }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map"]}